name: Frontend CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        cache-dependency-path: 'frontend/yarn.lock'

    - name: Install dependencies
      run: cd frontend && yarn install --frozen-lockfile

    - name: Run type check
      run: cd frontend && yarn run typecheck

    - name: Run lint
      run: cd frontend && yarn run lint

    - name: Build application
      run: cd frontend && yarn run build

    - name: Run tests
      run: cd frontend && yarn run test

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'yarn'
        cache-dependency-path: 'frontend/yarn.lock'

    - name: Install dependencies
      run: cd frontend && yarn install --frozen-lockfile

    - name: Build application
      run: cd frontend && yarn run build

    - name: Deploy to production
      run: echo "Deployment would happen here - configure for your platform (Vercel, Netlify, AWS, etc.)"
      # Example for Vercel:
      # uses: amondnet/vercel-action@v20
      # with:
      #   vercel-token: ${{ secrets.VERCEL_TOKEN }}
      #   vercel-args: '--prod'
      #   vercel-org-id: ${{ secrets.ORG_ID }}
      #   vercel-project-id: ${{ secrets.PROJECT_ID }}